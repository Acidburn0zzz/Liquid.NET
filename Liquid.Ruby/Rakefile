require File.dirname(__FILE__) + '/writetests.rb'

PROJECTDIR =  File.join(File.dirname(__FILE__))
TESTDIR =     File.join(PROJECTDIR, 'tests')
OUTPUTDIR =   File.join(PROJECTDIR, '../Liquid.NET.Tests/Ruby')

#TEST_TEMPLATE = File.join(testdir, File.read('tests.liquid'))

#puts("PROJECT DIRECTORY #{PROJECTDIR}")
#puts("OUTPUT DIRECTORY  #{OUTPUTDIR}")
#puts("TEST SOURCE       #{TESTDIR}")

def create_test_file(input, classname)

  test_template = File.read(File.join(PROJECTDIR, 'tests.liquid'))
  test_case_input = File.join(TESTDIR, input)
  csharp_output_file = File.join(OUTPUTDIR, classname + '.cs')
  puts("WRITING #{csharp_output_file}")
  create_test_file_from_cases test_case_input, csharp_output_file, classname, test_template

end

def create_liquid_test_file(input, classname)

  test_template = File.read(File.join(PROJECTDIR, 'tests.liquid'))
  test_case_input = File.join(TESTDIR, input)
  csharp_output_file = File.join(OUTPUTDIR, classname + '.cs')
  puts("WRITING #{csharp_output_file}")
  create_liquid_test_file_from_cases test_case_input, csharp_output_file, classname, test_template

end

namespace :gen do

  task :errors do
    create_test_file('errors.txt', 'ErrorTests')
  end

  task :filters do
    create_test_file('filters.txt', 'FilterTests')
  end

  task :tags do
    create_test_file('tags.txt', 'TagTests')
  end

  task :tags do
    create_test_file('truthy.txt', 'TruthyTests')
  end

  task :tags do
    create_test_file('types.txt', 'TypeTests')
  end

  task :liquid do
    create_liquid_test_file('liquid.txt', 'LiquidTests')
  end

  task :all => [:errors, :filters, :tags]

end

task :gen => "gen:all"
